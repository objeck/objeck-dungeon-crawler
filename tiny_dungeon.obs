#~
Tiny Dungeon Crawler
Copyright (c) 2020 Randy Hollines
~#

use Collection.Generic;
use Game.SDL2;
use Game.Framework;

class TinyDungeon {
	@framework : GameFramework;
	@sprite_manager : SpriteManager;
	@sound_manager : SoundManager;
	@map_manager : MapManager;

	@player_location : Int[];
	@player_direction : MapManager->Direction;

	@dungeon_views : Int[];

	New() {
		@framework := GameFramework->New(Game->SCREEN_WIDTH, Game->SCREEN_HEIGHT, "Tiny Dungeon");
		@framework->SetClearColor(Color->New(50, 60, 57));

		@sprite_manager := SpriteManager->New("./images", @framework);
		@sound_manager := SoundManager->New("./sounds", @framework);
		@map_manager := MapManager->New("./maps");

		@player_location := Int->New[3];
		@dungeon_views := Int->New[SpriteManager->Clips->DUNGEON_X_CLIPS + 2];
	}

	function : Main(args : String[]) ~ Nil {
		TinyDungeon->New()->Run();
	}

	method : Run() ~ Nil {
		if(<>@map_manager->Load()) {
			"--- Unable to load maps! ---"->ErrorLine();
			return;
		};

		if(<>@sprite_manager->Load()) {
			"--- Unable to load sprites! ---"->ErrorLine();
			return;
		};

		# TODO: add sound manager

		leaving {
			@map_manager->Unload();
			@sprite_manager->Unload();
			@sound_manager->Unload();
		};

		if(@framework->IsOk()) {
			StartLevel();

			frame_count := 0;
			quit := false;
			e := @framework->GetEvent();
			while(<>quit) {
				@framework->FrameStart();
				
				# process input
				while(e->Poll() <> 0) {
					# quit
					if(e->GetType() = EventType->SDL_QUIT) {
						quit := true;
					}
					# keyboard
					else if(e->GetType() = EventType->SDL_KEYDOWN & e->GetKey()->GetRepeat() = 0) {
				        GetInput(e);
				    };
				};

				Render(frame_count);

				@framework->FrameEnd();

				frame_count += 1;
				if(frame_count >= @framework->GetFps()) {
					frame_count := 0;
				};
			};
		}
		else {
			"--- Error Initializing Environment ---"->ErrorLine();
			return;
		};
	}

	method : StartLevel() ~ Nil {
		@player_direction := MapManager->Direction->NORTH;
		start_location := @map_manager->GetStart();
		@player_location[0] := start_location[0];
		@player_location[1] := start_location[1];

		UpdateView();
	}

	method : GetInput(e : Event) ~ Nil {
		select(e->GetKey()->GetKeysym()->GetScancode()) {
        	label Scancode->SDL_SCANCODE_UP
        	label Scancode->SDL_SCANCODE_W {
        		MoveForward();
        		UpdateView();
        	}

        	label Scancode->SDL_SCANCODE_LEFT
        	label Scancode->SDL_SCANCODE_A {
        		MoveLeft();
        		UpdateView();
        	}

        	label Scancode->SDL_SCANCODE_RIGHT
        	label Scancode->SDL_SCANCODE_D {
        		MoveRight();
        		UpdateView();
        	}
        };
	}

	method : MoveForward() ~ Nil {
		player_view := @map_manager->GetView(@player_direction, @player_location);
		if(IsOpen(player_view[MapManager->View->VIEW_1, MapManager->Side->MIDDLE])) {
			select(@player_direction) {
				label MapManager->Direction->NORTH {
					@player_location[0] -= 1;
				}

				label MapManager->Direction->SOUTH {
					@player_location[0] += 1;
				}

				label MapManager->Direction->EAST {
					@player_location[1] += 1;
				}

				label MapManager->Direction->WEST {
					@player_location[1] -= 1;
				}
			};
		};
	}

	method : IsOpenLeftMiddle(view : MapManager->View, player_view : Int[,]) ~ Bool {
		return IsOpen(player_view[view, MapManager->Side->LEFT]) & 
			IsOpen(player_view[view, MapManager->Side->MIDDLE]);				
	}

	method : IsOpenRightMiddle(view : MapManager->View, player_view : Int[,]) ~ Bool {
		return IsOpen(player_view[view, MapManager->Side->RIGHT]) & 
			IsOpen(player_view[view, MapManager->Side->MIDDLE]);				
	}

	method : IsOpenLeftRightMiddle(view : MapManager->View, player_view : Int[,]) ~ Bool {
		return IsOpen(player_view[view, MapManager->Side->LEFT]) & 
			IsOpen(player_view[view, MapManager->Side->RIGHT]) & 
			IsOpen(player_view[view, MapManager->Side->MIDDLE]);				
	}

	method : native : UpdateView() ~ Nil {
		player_view := @map_manager->GetView(@player_direction, @player_location, true);
		each(i : @dungeon_views) {
			@dungeon_views[i] := -1;
		};

		is_blocked := false;
		block_left := 0;
		block_right := 0;
		block_left_right := 0;

		#
		# --- View 0 ---
		#
		if(IsOpenLeftRightMiddle(MapManager->View->VIEW_0, player_view)) {
"--- V0 [Open to left and right] ---"->PrintLine();
			if(IsOpen(player_view[MapManager->View->VIEW_1, MapManager->Side->MIDDLE]) & 
					<>IsOpen(player_view[MapManager->View->VIEW_1, MapManager->Side->LEFT]) & 				
					<>IsOpen(player_view[MapManager->View->VIEW_1, MapManager->Side->RIGHT])) {
				@dungeon_views[1] := 91;
			}
			else {
				@dungeon_views[1] := 15;
			};
		}
		else if(IsOpenLeftMiddle(View->VIEW_0, player_view)) {
"--- V0 [Open to left] ---"->PrintLine();
			@dungeon_views[1] := 11;
			block_right += 1;
			block_left := 0;
		}
		else if(IsOpenRightMiddle(MapManager->View->VIEW_0, player_view)) {
"--- V0 [Open to right] ---"->PrintLine();
			@dungeon_views[1] := 7;
			block_left += 1;
			block_right := 0;
		}
		else if(IsOpen(player_view[MapManager->View->VIEW_0, MapManager->Side->MIDDLE])) {
"--- V0 [Enclosed] ---"->PrintLine();
			@dungeon_views[1] := 3;
			block_left_right += 1;
			block_left := 0;
			block_right := 0;
		};

		#
		# --- View 1 ---
		#
		if(IsOpenLeftRightMiddle(MapManager->View->VIEW_1, player_view)) {
			if(IsOpenLeftRightMiddle(MapManager->View->VIEW_0, player_view)) {
"--- (Alt) V1 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[1] := 75;
				@dungeon_views[2] := 74;
			}
			else {
"--- V1 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				if(block_left = 1) {
					@dungeon_views[2] := 50;
				}
				else if(block_right = 1) {
					@dungeon_views[2] := 62;
				}
				else if(block_left_right = 1) {
					@dungeon_views[2] := 78;
				}
				else {
					@dungeon_views[2] := 74;
				};

			};
			block_left := 0;
			block_right := 0;
		}
		else if(IsOpenLeftMiddle(View->VIEW_1, player_view)) {
			if(IsOpenLeftMiddle(View->VIEW_0, player_view)) {
"--- (Alt) V1 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[1] := 35;
				@dungeon_views[2] := 34;
			}
			else {
"--- V1 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[2] := 10;
			};
			block_right += 1;
			block_left := 0;
		}
		else if(IsOpenRightMiddle(MapManager->View->VIEW_1, player_view)) {
			if(IsOpenRightMiddle(MapManager->View->VIEW_0, player_view)) {
"--- (Alt) V1 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[1] := 19;
				@dungeon_views[2] := 18;
			}
			else {
"--- V1 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[2] := 6;
			};
			block_left += 1;
			block_right := 0;
		}
		else if(IsOpen(player_view[MapManager->View->VIEW_1, MapManager->Side->MIDDLE])) {
"--- V1: Enclosed] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
			@dungeon_views[2] := 2;
			block_left_right += 1;
			block_left := 0;
			block_right := 0;
		}
		else {
"--- V1: Blocked] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
			@dungeon_views[0] := 99;
			is_blocked := true;
		};

		#
		# --- View 2 ---
		#
		if(<>is_blocked) {
			if(IsOpenLeftRightMiddle(MapManager->View->VIEW_2, player_view)) {
				if(IsOpenLeftRightMiddle(MapManager->View->VIEW_1, player_view)) {
"--- (Alt) V2 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_left_right = 1) {
						@dungeon_views[3] := 77;
					}
					else {
						@dungeon_views[3] := 73;
					};
				}
				else {
"--- V2 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[3] := 13;	
				};
			}
			else if(IsOpenLeftMiddle(View->VIEW_2, player_view)) {
				if(IsOpenLeftMiddle(View->VIEW_1, player_view)) {
"--- (Alt) V2 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_left_right = 1) {
						@dungeon_views[2] := 37;
						@dungeon_views[3] := 38;
					}
					else {
						@dungeon_views[3] := 33;
					};
				}
				else {
"--- V2 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[3] := 9;
				};
				block_right += 1;
				block_left := 0;
			}
			else if(IsOpenRightMiddle(MapManager->View->VIEW_2, player_view)) {
				if(IsOpenRightMiddle(MapManager->View->VIEW_1, player_view)) {
"--- (Alt) V2 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_left_right = 1) {
						@dungeon_views[2] := 21;
						@dungeon_views[3] := 22;
					}
					else {
						@dungeon_views[3] := 17;
					};
				}
				else {
"--- V2 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[3] := 5;
				};
				block_left += 1;
				block_right := 0;
			}
			else if(IsOpen(player_view[MapManager->View->VIEW_2, MapManager->Side->MIDDLE])) {
"--- V2 [Enclosed] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[3] := 1;
				block_left_right += 1;
				block_left := 0;
				block_right := 0;
			}
			else {
"--- V2: Blocked] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[0] := 99;
				is_blocked := true;
			};
		};

		#
		# --- View 3 ---
		#
		if(<>is_blocked) {
			if(IsOpenLeftRightMiddle(MapManager->View->VIEW_3, player_view)) {
				if(IsOpenLeftRightMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_left_right = 2) {
						@dungeon_views[4] := 80;
					}
					else if(block_left_right = 1) {
						@dungeon_views[4] := 76;
					}
					else {
						@dungeon_views[4] := 72;
					};
				}
				else if(IsOpenLeftMiddle(View->VIEW_2, player_view)) {
"--- (Alt)  V3 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[4] := 68;
				}
				else if(IsOpenRightMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt)  V3 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[4] := 56;
				}
				else {
"--- V3 [Open to left and right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[4] := 12;
				};
			}
			else if(IsOpenLeftMiddle(View->VIEW_3, player_view)) {
				if(IsOpenLeftRightMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[3] := 65;
					@dungeon_views[4] := 32;
				}
				else if(IsOpenLeftMiddle(View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_right = 2) {
						@dungeon_views[3] := 33;
						@dungeon_views[4] := 32;
					}
					else if(block_left_right = 2) {
						@dungeon_views[3] := 42;
						@dungeon_views[4] := 41;
					}
					else {
						@dungeon_views[4] := 32;
					};
				}
				else if(IsOpenRightMiddle(View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_right = 2) {
						@dungeon_views[3] := 17;
						@dungeon_views[4] := 16;
					}
					else if(block_left_right = 2) {
						@dungeon_views[3] := 26;
						@dungeon_views[4] := 25;
					}
					else {
						@dungeon_views[4] := 16;
					};
				}
				else {
"--- V3 [Open to left] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[4] := 8;
				};
				block_right += 1;
				block_left := 0;
			}
			else if(IsOpenRightMiddle(MapManager->View->VIEW_3, player_view)) {
				if(IsOpenLeftRightMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[3] := 53;
					@dungeon_views[4] := 16;
				}
				else if(IsOpenLeftMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_right = 2) {
						@dungeon_views[3] := 33;
						@dungeon_views[4] := 32;
					}
					else if(block_left_right = 2) {
						@dungeon_views[3] := 42;
						@dungeon_views[4] := 41;
					}
					else {
						@dungeon_views[4] := 32;
					};
				}
				else if(IsOpenRightMiddle(MapManager->View->VIEW_2, player_view)) {
"--- (Alt) V3 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					if(block_left = 2) {
						@dungeon_views[3] := 17;
						@dungeon_views[4] := 16;
					}
					else if(block_left_right = 2) {
						@dungeon_views[3] := 26;
						@dungeon_views[4] := 25;
					}
					else {
						@dungeon_views[4] := 16;
					};
				}
				else {
"--- V3 [Open to right] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
					@dungeon_views[4] := 4;
				};
				block_left += 1;
				block_right := 0;
			}
			else if(IsOpen(player_view[MapManager->View->VIEW_3, MapManager->Side->MIDDLE])) {
"--- V3 [Enclosed] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				if(<>IsOpen(player_view[MapManager->View->VIEW_2, MapManager->Side->LEFT]) & 
						<>IsOpen(player_view[MapManager->View->VIEW_2, MapManager->Side->RIGHT])) {
"### 0 ###"->PrintLine();
					if(block_left_right = 1) {
						@dungeon_views[4] := 1;
#						@dungeon_views[3] := 89;
#						@dungeon_views[4] := 0;
					}
					else {
						@dungeon_views[4] := 0;	
					};
				}
				else if(IsOpen(player_view[MapManager->View->VIEW_2, MapManager->Side->LEFT]) & 
							IsOpen(player_view[MapManager->View->VIEW_2, MapManager->Side->RIGHT])) {
"### 1 ###"->PrintLine();
					@dungeon_views[4] := 88;
				}
				else {
					@dungeon_views[4] := 0;
				};
			}
			else {
"--- V3: Blocked] => block_left_right={$block_left_right}, block_left={$block_left}, block_right={$block_right} ---"->PrintLine();
				@dungeon_views[0] := 99;
				is_blocked := true;
			};
		};

		#
		# --- View 4 ---
		#
		if(is_blocked | (<>IsOpen(player_view[MapManager->View->VIEW_4, MapManager->Side->MIDDLE]) & 
					<>IsOpen(player_view[MapManager->View->VIEW_4, MapManager->Side->LEFT]) & 				
					<>IsOpen(player_view[MapManager->View->VIEW_4, MapManager->Side->RIGHT]))) {
			@dungeon_views[0] := 99;
		}
		else {
			@dungeon_views[0] := 95;
		};

        @map_manager->PrintMap(@player_direction, @player_location);
	}

	method : IsOpen(player_view : Int) ~ Bool {
		if(player_view >= MapManager->Type->OPEN & player_view <= MapManager->Type->END) {
			return true;
		};

		return false;
	}


	method : IsVisible(view : MapManager->View, player_view : Int[,]) ~ Bool {
		count := 0;

		for(i := 0; i < 3; i += 1;) {
			if(player_view[view, i] = MapManager->Type->BLOCKED) {
				count += 1;
			};
		};

		return count <> 3;
	}

	method : MoveLeft() ~ Nil {
		select(@player_direction) {
			label MapManager->Direction->NORTH {
				@player_direction := MapManager->Direction->WEST;
			}

			label MapManager->Direction->SOUTH {
				@player_direction := MapManager->Direction->EAST;
			}

			label MapManager->Direction->EAST {
				@player_direction := MapManager->Direction->NORTH;
			}

			label MapManager->Direction->WEST {
				@player_direction := MapManager->Direction->SOUTH;
			}
		};
	}

	method : MoveRight() ~ Nil {
		select(@player_direction) {
			label MapManager->Direction->NORTH {
				@player_direction := MapManager->Direction->EAST;
			}

			label MapManager->Direction->SOUTH {
				@player_direction := MapManager->Direction->WEST;
			}

			label MapManager->Direction->EAST {
				@player_direction := MapManager->Direction->SOUTH;
			}

			label MapManager->Direction->WEST {
				@player_direction := MapManager->Direction->NORTH;
			}
		};
	}

	method : Render(frame_count : Int) ~ Nil {
		@framework->Clear();

		# background
		each(i : @dungeon_views) {
			@sprite_manager->RenderDungeonSprite(@dungeon_views[i]);
		};
#		@sprite_manager->RenderDungeonSprite(100);
		
		@framework->Show();
	}

	consts Game {
		SCREEN_WIDTH := 1024,
		SCREEN_HEIGHT := 512
	}
}